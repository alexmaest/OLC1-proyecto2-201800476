//producciones
//NODO INICIAL
INICIO :ENTORNO_GLOBAL EOF

//LISTA DE INSTRUCCIONES EN EL ENTORNO GLOBAL QUE EJECUTARA EL PROGRAMA
ENTORNO_GLOBAL :ENTORNO_GLOBAL GLOBAL
    |GLOBAL
    |error

//INSTRUCCIONES GLOBALES
GLOBAL :DECLARACION_VARIABLE
    |DECLARACION_FUNCIONES
    |INICIAR_SISTEMA

//DECLARAR EL INICIO DEL SISTEMA
INICIAR_SISTEMA :'start' 'with' 'id' '(' ')' ';'
    |'start' 'with' 'id' '(' LISTA_VALORES ')' ';'

//LISTA DE VALORES PARA INGRESAR LOS PARAMETROS DE FUNCIONES Y METODOS PARA INICIAR EL SISTEMA
LISTA_VALORES :LISTA_VALORES ',' EXPRESION
    |EXPRESION

//DECLARACION DE FUNCIONES O METODOS
DECLARACION_FUNCIONES :TIPO_DATO 'id' '(' PARAMETROS_FUNCION ')' ENTORNO
    |TIPO_DATO 'id' '(' ')' ENTORNO

//PARAMETROS PARA UNA FUNCION O METODO
PARAMETROS_FUNCION : PARAMETROS_FUNCION ',' TIPO_DATO 'id'
    |PARAMETROS_FUNCION ',' 'lista_dinamica' '<' TIPO_DATO '>' 'id'
    |'lista_dinamica' '<' TIPO_DATO '>' 'id'
    |PARAMETROS_FUNCION ',' TIPO_DATO '[' ']' 'id'
    |TIPO_DATO '[' ']' 'id'
    |TIPO_DATO 'id'

//LISTA DE INSTRUCCIONES
INSTRUCCIONES : INSTRUCCIONES INSTRUCCION
    |INSTRUCCION

//INSTRUCCIONES QUE INGRESARAN EN UNA LISTA
INSTRUCCION : DECLARACION_VARIABLE
    |ASIGNACION ';'
    |METODOS_CALL ';'
    |SENTENCIAS
    |TRANSFERENCIA ';'

//SENTENCIAS DE TRANSFERENCIA
TRANSFERENCIA : 'break'
    |'return' EXPRESION
    |'return' 
    |'continue'

//SENTENCIAS (CICLOS Y CONDICIONES) A UTILIZAR EN EL LENGUAJE
SENTENCIAS : GENERARIF
    |GENERARSWITCH
    |GENERARWHILE
    |GENERARFOR
    |GENERARDOWHILE
   
//SENTENCIA PARA EL CICLO IF Y TODAS SUS VARIANTES
GENERARIF :'if' '(' EXPRESION ')' ENTORNO GENERARELSE

//SENTENCIA PARA ELSE
GENERARELSE :'else' ENTORNO
    |'else' GENERARIF
    |/*epsilon*/

//SENTENCIA PARA SWITCH
GENERARSWITCH :'switch' '(' EXPRESION ')' ENTORNO_SWITCH

//LISTA DE CASOS DEL SWITCH
CASES_LIST :CASES_LIST 'case' EXPRESION ':' INSTRUCCIONES
    |'case' EXPRESION ':' INSTRUCCIONES

//DEFAULT PARA EL SWITCH
DEFAULT :'default' ':' INSTRUCCIONES

//SENTENCIA PARA WHILE
GENERARWHILE :'while' '(' EXPRESION ')' ENTORNO

//SENTENCIA PARA FOR
GENERARFOR :'for' '(' DECLARACION_VARIABLE EXPRESION ';' ASIGNACION ')' ENTORNO
    |'for' '(' ASIGNACION ';' EXPRESION ';' ASIGNACION ')' ENTORNO

//SENTENCIA PARA DO WHILE
GENERARDOWHILE :'do' ENTORNO 'while' '(' EXPRESION ')' ';'

//ENTORNO PARA EL SWITCH
ENTORNO_SWITCH :'{' CASES_LIST DEFAULT '}'
    |'{' CASES_LIST '}'
    |'{' DEFAULT '}'

//ENTORNO PARA EL ENCAPSULAMIENTO DE INSTRUCCIONES EN DIFERENTES AMBITOS
ENTORNO :'{' '}'
    |'{' INSTRUCCIONES '}'

//LLAMADA A LOS METODOS
METODOS_CALL :'append' '(' 'id' ',' EXPRESION ')'
    |'setValue' '(' 'id' ',' LISTA_VALORES ')'
    |'WriteLine' '(' LISTA_VALORES ')'
    |'id' '(' LISTA_VALORES ')'
    |'id' '(' ')'

//LLAMADA DE FUNCIONES
FUNCIONES_CALL :'getValue' '(' 'id' ',' LISTA_VALORES ')'
    |'toLower' '(' LISTA_VALORES ')'
    |'toUpper' '(' LISTA_VALORES ')'
    |'length' '(' LISTA_VALORES ')'
    |'truncate' '(' LISTA_VALORES ')'
    |'round' '(' LISTA_VALORES ')'
    |'typeof' '(' LISTA_VALORES ')'
    |'tostring' '(' LISTA_VALORES ')'
    |'toCharArray' '(' LISTA_VALORES ')'
    |'id' '(' LISTA_VALORES ')'
    |'id' '(' ')'


//DECLARACION DE VARIABLE
DECLARACION_VARIABLE :TIPO_DATO ASIGNACION ';'
    |TIPO_DATO LISTA_ID';'
    |TIPO_DATO LISTA_ID '[' ']' ';'
    |'lista_dinamica' '<' TIPO_DATO '>' ASIGNACION ';'
    |'lista_dinamica' '<' TIPO_DATO '>' LISTA_ID ';'

//ASIGNACION DE VARIABLES
ASIGNACION
    :LISTA_ID '=' EXPRESION
    |LISTA_ID '[' ']' '=' EXPRESION
    |LISTA_ID '[' EXPRESION ']' '=' EXPRESION
    |LISTA_ID '[' '[' EXPRESION ']' ']' '=' EXPRESION
    |'id' '++'
    |'id' '--'

//LISTA DE ID
LISTA_ID :LISTA_ID ',' 'id'
    |'id'

//TIPOS DE DATO
TIPO_DATO :'t_double'
    |'t_char'
    |'t_int'
    |'t_string'
    |'t_boolean'
    |'void'

//EXPRESIONES
EXPRESION :EXPMAT
    |EXPLOG
    |EXPREL
    |EXPTER
    |FUNCIONES_CALL
    |'(' TIPO_DATO ')' EXPRESION
    |'(' EXPRESION ')'
    |'new' 'lista_dinamica' '<' TIPO_DATO '>'
    |ARRAY
    |VALORES
    |'id'
    |'id' '++'
    |'id' '--'
    ;

//EXPRESIONES PARA DAR EL VALOR DEL ARRAY
ARRAY :'{' VALORES_LIST '}'
    |'new' TIPO_DATO '[' EXPRESION ']'
    |'id' '[' EXPRESION ']'

//EXPRESIONES ARITMETICAS
EXPMAT :EXPRESION '+' EXPRESION
    |EXPRESION '-' EXPRESION
    |EXPRESION '/' EXPRESION
    |EXPRESION '*' EXPRESION
    |EXPRESION 'Ë†' EXPRESION
    |EXPRESION '%' EXPRESION
    |'-' EXPRESION %prec UMENOS

//EXPRESIONES LOGICAS
EXPLOG :EXPRESION '&&' EXPRESION
    |EXPRESION '||' EXPRESION
    |'!' EXPRESION

//EXPRESIONES RELACIONALES
EXPREL :EXPRESION '==' EXPRESION
    |EXPRESION '!=' EXPRESION
    |EXPRESION '<' EXPRESION
    |EXPRESION '<=' EXPRESION
    |EXPRESION '>' EXPRESION
    |EXPRESION '>=' EXPRESION

//EXPRESION PARA OPERADOR TERNARIO
EXPTER :EXPRESION '?' EXPRESION ':' EXPRESION

//LISTA DE LITERALES
VALORES_LIST :VALORES_LIST ',' VALORES
    |VALORES

//LITERALES
VALORES :'int'
    |'double'
    |'boolean'
    |'char'
    |'string'